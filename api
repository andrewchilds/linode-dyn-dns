#!/bin/bash


##### NO CONFIGURATION NECESSARY.

MY_PATH="$( cd -P "$( dirname "$0" )" && pwd )"

MY_API_KEY=`cat $MY_PATH/config_api_key.txt`

MY_DOMAIN_ID=`cat $MY_PATH/config_domain_id.txt`

MY_RESOURCE_ID=`cat $MY_PATH/config_resource_id.txt`

LOG_FILE="$MY_PATH/dns.update.log"

CACHED_IP_FILE="$MY_PATH/.cached.ip.txt"

LINODE_API_URL="https://api.linode.com/?api_key=$MY_API_KEY"



##### IP FUNCTIONS

function get_ip {
  local IP=`curl --silent http://checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'`
  [ "$IP" == "" ] && {
    IP=`curl --silent http://automation.whatismyip.com/n09230945.asp`
  }
  [ "$IP" == "" ] && {
    echo "[`date`] Unable to retrieve IP address!" >> $LOG_FILE
    exit 1;
  }
  echo $IP
}

function get_cached_ip {
  touch $CACHED_IP_FILE
  cat $CACHED_IP_FILE
}



##### LINODE API HELPERS

# Retrieves a list of domains in your linode DNS manager.
function list_domains {
  echo $(curl --silent $LINODE_API_URL\&api_action=domain.list)
}

# Retrieves a list of resources (i.e. subdomains) for a particular domain.
# @param Domain ID
function list_resources {
  [ $# -ne 1 ] && {
      echo "Usage: list_resources domain" 1>&2;
      exit 1;
  }
  echo $(curl --silent $LINODE_API_URL\&api_action=domain.resource.list\&DomainID=$1)
}

# Updates a domain resource.
# @param Domain ID
# @param Resource ID
function update_resource_target {
  [ $# -ne 2 ] && {
      echo "Usage: update_resource_target domain resource" 1>&2;
      exit 1;
  }
  echo $(curl --silent $LINODE_API_URL\&api_action=domain.resource.update\&DomainID=$1\&ResourceID=$2\&TTL_sec=300\&Target="[remote_addr]")
}

function update {
  IP_OLD=`get_cached_ip`
  IP_NEW=`get_ip`

  [ "$IP_OLD" == "" ] && {
    IP_OLD=$IP_NEW
  }

  [ "$IP_OLD" != "$IP_NEW" ] && {
    update_resource_target $MY_DOMAIN_ID $MY_RESOURCE_ID
    echo "[`date`] IP changed from $IP_OLD to $IP_NEW" >> $LOG_FILE
  }

  echo $IP_NEW > $CACHED_IP_FILE
}



##### DO IT

$@
exit 0;
